version: "3.8"

services:
  producer:
    container_name: producer
    build:
      context: services/producer
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/producer:/usr/src/app
      - $PWD/services/producer/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    ports:
      - 3000:3000
    depends_on:
      - kafka
      
  consumer:
    container_name: consumer
    build:
      context: services/consumer
      dockerfile: Dockerfile
      target: development
    volumes:
      - $PWD/services/consumer:/usr/src/app
      - $PWD/services/consumer/usr/src/app/node_modules
      - $HOME/.cache/yarn:/yarncache
    command: yarn start:dev
    ports:
      - 3010:3010
    depends_on:
      - kafka

  zookeeper2:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper2
    container_name: zookeeper2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper2:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT
    depends_on:
      - zookeeper2

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    hostname: control-center
    container_name: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      PORT: 9021
    depends_on:
      - kafka